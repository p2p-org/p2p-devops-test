name: CI/CD Pipeline on master branch

on:
  push:
    branches:
      - master

jobs:      
  build-and-push-production:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3.0.0

      - name: Install yq
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.14.1/yq_linux_amd64 -O yq
          chmod +x yq
          sudo mv yq /usr/local/bin/

      - name: Extract Variables from values.yaml
        id: var
        run: |
          export DOCKER_TAG=$(yq eval 'tojson' devops/values-prod.yml | jq '.app.containers.tag')
          echo "::set-output name=DOCKER_TAG::$DOCKER_TAG"

      - name: Build Docker image
        id: build
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker build -t ghcr.io/${{ github.repository_owner }}/p2p-devops-test:${{ steps.var.outputs.DOCKER_TAG }} -f devops/.docker/dockerfile .
          docker push ghcr.io/${{ github.repository_owner }}/p2p-devops-test:${{ steps.var.outputs.DOCKER_TAG }} 

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
    
      - name: Generate kubectl config
        run: |
          aws eks update-kubeconfig --name eks-prod --region us-east-1

      - name: Apply ArgoCD Manifests
        run: |
          kubectl apply -f devops/argocd/argocd-prod.yml --validate=false